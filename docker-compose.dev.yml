version: '3'

volumes:
  portainer_data:

services:
  nginx:
    # image: nginx:1.16.1
    image: nginx:1.17.6
    container_name: dgi_catalog_nginx
    # restart: always
    volumes:
      - ./nginx/nginx.dev.template:/etc/nginx/conf.d/mysite.template
    env_file:
      - ./env/nginx.env
    command: /bin/bash -c "envsubst '$$NGINX_HOST $$NGINX_PORT' < /etc/nginx/conf.d/mysite.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    ports:
      - 8089:8089
    networks:
      - dgi_catalog

  dgi_catalog_frontend:
    image: dgi-catalog-frontend:0.0.9
    container_name: dgi_catalog_frontend
    command: npm start
    # restart: always
    env_file:
      - ./env/portal.env
    volumes:
      - ../dgi-catalog-frontend/portal:/app
    ports:
      - "5000:8000"
    networks:
      - dgi_catalog

  dgi_catalog_backend:
    image: dgi-catalog-backend_dev:0.0.1
    container_name: dgi_catalog_backend
    command: python3 manage.py run
    # restart: always
    volumes:
      - ../dgi-catalog-backend:/app
    env_file:
      - ./env/api.env
    ports:
      - "5001:5001"
    networks:
      - dgi_catalog

  inpe_stac:
    image: inpe_stac_dev:0.0.3
    container_name: dgi_catalog_inpe_stac
    command: flask run --host=0.0.0.0
    # restart: always
    volumes:
      - ../inpe-stac/inpe_stac:/inpe_stac
    env_file:
      - ./env/inpe_stac.env
    ports:
      - "5002:5000"
    networks:
      - dgi_catalog

  stac_compose:
    image: stac_compose_dev:0.0.6
    container_name: dgi_catalog_stac_compose
    command: python3 manage.py run
    # restart: always
    volumes:
      - ../stac-compose:/bdc-stac-compose
      - ./stac-compose/providers/providers.json:/bdc-stac-compose/bdc_search_stac/providers/static/providers.json
    env_file:
      - ./env/stac_compose.env
    ports:
      - "5003:5002"
    networks:
      - dgi_catalog

  portainer:
    image: portainer/portainer
    container_name: dgi_catalog_portainer
    # restart: always
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9000:9000
    networks:
      - dgi_catalog

  geoserver:
    image: kartoza/geoserver:2.15.0
    container_name: dgi_catalog_geoserver
    # restart: always
    volumes:
      - ./geoserver/geoserverdata:/opt/geoserver/data_dir
      - ./geoserver/grids:/home/data/grids
    env_file:
      - ./env/geoserver.env
    ports:
      - 9001:8080
    networks:
      - dgi_catalog

networks:
  dgi_catalog:
    driver: bridge
