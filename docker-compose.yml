version: '2.1'

# Source:
# - https://github.com/kartoza/docker-geoserver
# - https://github.com/kartoza/docker-postgis/blob/develop/docker-compose.yml

volumes:
  portainer_data:
#   pg_data:
#   pg_backup:
  geoserver_data:

services:
  portainer:
    container_name: dgi_catalog_portainer
    image: portainer/portainer
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9000:9000
    restart: on-failure
    # URL: http://localhost:9000

  postgis:
    container_name: dgi_catalog_postgis
    image: kartoza/postgis:11.0-2.5
    volumes:
      - ./volumes/postgis/var/lib/postgresql:/var/lib/postgresql
      - ./volumes/pg_backup/backups:/backups
    env_file:
      - env/postgis.env
    ports:
      - 9001:5432
    restart: on-failure
    healthcheck:
      test: "exit 0"

  pgadmin4:
    container_name: dgi_catalog_pgadmin4
    image: dpage/pgadmin4:4.14
    volumes:
      - ./volumes/pgadmin4/var/lib/pgadmin:/var/lib/pgadmin
    env_file:
      - env/pgadmin4.env
    ports:
      - 9002:80
    restart: on-failure
    depends_on:
      postgis:
        condition: service_healthy
    # http://localhost:9002/

  geoserver:
    container_name: dgi_catalog_geoserver
    image: kartoza/geoserver:2.15.0
    volumes:
      - geoserver_data:/opt/geoserver/data_dir
    env_file:
      - env/geoserver.env
    ports:
      - 9003:8080
    restart: on-failure
    depends_on:
      postgis:
        condition: service_healthy
    healthcheck:
      test: curl --fail -s http://localhost:8080/ || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
    # URL: http://localhost:9003/geoserver

  pg_backup:
    container_name: dgi_catalog_pg_backup
    image: kartoza/pg-backup:11.0
    volumes:
      - ./volumes/pg_backup/backups:/backups
    env_file:
      - env/pg_backup.env
    restart: on-failure
    links:
      - postgis:postgis
    depends_on:
      postgis:
        condition: service_healthy
